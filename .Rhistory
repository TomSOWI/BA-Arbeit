library(here)
#Libraries
library(RPostgres)
library(RPostgreSQL)
library(quanteda)
library(udpipe)
library(proxy)
library(ggplot2)
library(tidyverse)
library(proxy)
library(factoextra)
library(FactoMineR)
library(here)
library(devtools)
library(proxyC)
library(tidytext)
library(manifestoR)
devtools::install_github("jogrue/regexhelpeR")
devtools::install_github("jogrue/multidictR")
devtools::install_github("jogrue/popdictR")
remove(kmeansBT17_dt)
remove(kmeansBT17_dt)
remove(kmeansBT18_dt)
remove(kmeansBT19_dt)
remove(kmeansBT20_dt)
remove(distBT17_dt)
remove(distBT18_dt)
remove(distBT19_dt)
remove(distBT20_dt)
(text)
#Libraries
library(RPostgres)
library(RPostgreSQL)
library(quanteda)
library(udpipe)
library(proxy)
library(ggplot2)
library(tidyverse)
library(proxy)
library(factoextra)
library(FactoMineR)
library(here)
library(devtools)
library(proxyC)
library(tidytext)
library(manifestoR)
devtools::install_github("jogrue/regexhelpeR")
devtools::install_github("jogrue/multidictR")
devtools::install_github("jogrue/popdictR")
id2014 <- docvars(corp_2014)
corp_2014 <- corpus(df_2014, text_field = "speech_content")
id2014 <- docvars(corp_2014)
id2014$docid <- rownames(id2014)
#tokens cleaning
toks2014 <- tokens(corp_2014, remove_punct = T, remove_symbols = T, remove_numbers = T,remove_url = TRUE,
remove_separators = TRUE, include_docvars = T)
toks2014 <- tokens_tolower(toks2014)
toks2014 <- tokens_remove(toks2014, stopwords("german"))
#dictionary implementation
df_kwic_regex <- kwic(corp_2014, pattern = dict_regex$populismus, valuetype = "regex", window = 1) #case_insensitive = FALSE) #4752
t <- popdictR::gruendl_dictionary_complete
terms_total <- popdictR::gruendl_dictionary_complete %>% select(Word,Sub_Type,Comment,duplicate, real_duplicate,wildcard)
terms_total$filter <- ifelse(terms_total$Word %in% terms, 1,0)
table(terms_total$filter)
terms_df <- terms_total[terms_total$filter ==1,]
terms_fixed <- terms_df[terms_df$wildcard != "regex" & !(terms_df$Word %in% c("hausverstand(s|es)?",
"staatsversagen(s)?","täusch(t|en)")),]
terms_regex <- terms_df[terms_df$wildcard == "regex"| terms_df$Word %in% c("hausverstand(s|es)?",
"staatsversagen(s)?","täusch(t|en)"),]
dict_fixed <- dictionary(list(populismus = terms_fixed$Word))
dict_regex <- dictionary(list(populismus = terms_regex$Word))
df_kwic_regex <- kwic(corp_2014, pattern = dict_regex$populismus, valuetype = "regex", window = 1) #case_insensitive = FALSE) #4752
df_kwic_fixed <- kwic(corp_2014, pattern = dict_fixed$populismus, valuetype = "fixed", window = 1) #case_insensitive = FALSE)
#211
df_kwic <- rbind(df_kwic_regex,df_kwic_fixed)
#adding weights of dictionary terms
df_res <- merge(df_kmeans_aggr,df_kwic, by = "pattern")
View(df_kwic)
View(df_kwic)
df_kmeans_aggr
